{
  "owners": [
    {
      "email": "balzy@gmail.com",
      "role": "owner"
    },
    {
      "id": 1757950909792,
      "email": "balltol132@gmail.com"
    }
  ],
  "users": [
    {
      "username": "balzy",
      "whatsapp": "6285147026780",
      "role": "user"
    }
  ],
  "codes": [
    {
      "title": "Development",
      "content": "console.log('Balzy Developer');"
    },
    {
      "title": "Plugins Iqc",
      "content": "const fetch = require('node-fetch')\n\nlet handler = async (m, { text, daftar, isRegistered, reply, conn }) => {\n    if (!text) return reply('gunakan: .iqc jam|batre|pesan\\ncontoh: .iqc 18:00|40|hai hai')\n    if (!isRegistered) return daftar(`kamu belum daftar, daftarlah agar bisa menggunakan fitur bot\\ncara daftar .daftar nama.umur\\nseperti ini balzy.10`)\n\n    let [time, battery, ...msg] = text.split('|')\n    if (!time || !battery || msg.length === 0) return reply('format salah! gunakan:\\n.iqc jam|batre|pesan\\nContoh:\\n.iqc 18:00|40|hai hai')\n\n    reply(mess.wait)\n\n    let messageText = encodeURIComponent(msg.join('|').trim())\n    let url = `https://brat.siputzx.my.id/iphone-quoted?time=${encodeURIComponent(time)}&batteryPercentage=${battery}&carrierName=BalzyDeveloper&messageText=${messageText}&emojiStyle=apple`\n\n    try {\n        let res = await fetch(url)\n        if (!res.ok) return reply('ÃÂÃÂ¢ÃÂÃÂÃÂÃÂ Gagal mengambil data dari API.')\n\n        let buffer\n        if (typeof res.buffer === 'function') {\n            buffer = await res.buffer()\n        } else {\n            let arrayBuffer = await res.arrayBuffer()\n            buffer = Buffer.from(arrayBuffer)\n        }\n\n        await conn.sendMessage(m.chat, {\n            image: buffer,\n            caption: `ÃÂÃÂ¢ÃÂÃÂÃÂÃÂ *Sukses!*\\nJam: ${time}\\nBatre: ${battery}%\\nPesan: ${msg.join(' ')}`\n        }, { quoted: m })\n\n    } catch (e) {\n        console.error(e)\n        reply('ÃÂÃÂ¢ÃÂÃÂÃÂÃÂ Terjadi kesalahan saat menghubungi API.')\n    }\n}\n\nhandler.command = ['iqc']\nhandler.tags = ['fun']\nhandler.owner = false\n\nmodule.exports = handler"
    },
    {
      "title": "plugin cek Rakyat",
      "content": "const axios = require(\"axios\");\n\n// Preset data presiden manual (bisa kamu tambah sendiri)\nconst presidenManual = {\n  indonesia: \"Prabowo Subianto\",\n  malaysia: \"Anwar Ibrahim\",\n  usa: \"Joe Biden\",\n  singapore: \"Tharman Shanmugaratnam\",\n  philippines: \"Bongbong Marcos\",\n  india: \"Droupadi Murmu\",\n  china: \"Xi Jinping\",\n  japan: \"Fumio Kishida\"\n};\n\nlet handler = async (m, { text, command }) => {\n  if (!text) return m.reply(`Contoh penggunaan:\\n.${command} indonesia`);\n\n  try {\n    let url = `https://restcountries.com/v3.1/name/${encodeURIComponent(text)}`;\n    let { data } = await axios.get(url);\n    if (!data || !data[0]) return m.reply(\"ÃÂ¢ÃÂÃÂ Negara tidak ditemukan.\");\n\n    let negara = data[0];\n    let namaNegara = negara.name.common.toLowerCase();\n    let presiden = presidenManual[namaNegara] || \"-\";\n\n    // Format teks\n    let hasil = `\n${negara.flag || \"\"} *Informasi Negara: ${negara.name.common}*\nÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¢ÃÂÃÂ\nÃÂ°ÃÂÃÂÃÂ³ÃÂ¯ÃÂ¸ÃÂ Nama       : ${negara.name.common}\nÃÂ°ÃÂÃÂÃÂ Region     : ${negara.region || \"-\"}\nÃÂ°ÃÂÃÂÃÂºÃÂ¯ÃÂ¸ÃÂ Subregion : ${negara.subregion || \"-\"}\nÃÂ°ÃÂÃÂÃÂÃÂ¯ÃÂ¸ÃÂ Ibu Kota   : ${negara.capital ? negara.capital[0] : \"-\"}\nÃÂ°ÃÂÃÂÃÂ¤ Presiden   : ${presiden}\nÃÂ°ÃÂÃÂÃÂ Timezones  : ${negara.timezones ? negara.timezones.join(\", \") : \"-\"}\nÃÂ°ÃÂÃÂÃÂ Luas       : ${negara.area ? negara.area.toLocaleString() + \" kmÃÂÃÂ²\" : \"-\"}\nÃÂ°ÃÂÃÂÃÂ¥ Populasi   : ${negara.population ? negara.population.toLocaleString() : \"-\"}\nÃÂ°ÃÂÃÂÃÂ° Mata Uang  : ${negara.currencies ? (Object.values(negara.currencies)[0].name + \" (\" + Object.keys(negara.currencies)[0] + \")\") : \"-\"}\nÃÂ°ÃÂÃÂÃÂ£ÃÂ¯ÃÂ¸ÃÂ Bahasa     : ${negara.languages ? Object.values(negara.languages).join(\", \") : \"-\"}\nÃÂ°ÃÂÃÂÃÂºÃÂ¯ÃÂ¸ÃÂ Maps      : ${negara.maps?.googleMaps || \"-\"}\nÃÂ°ÃÂÃÂÃÂ OSM        : ${negara.maps?.openStreetMaps || \"-\"}\n    `.trim();\n\n    m.reply(hasil);\n\n  } catch (e) {\n    console.error(\"Error utama:\", e);\n    m.reply(\"ÃÂ¢ÃÂÃÂ ÃÂ¯ÃÂ¸ÃÂ Terjadi kesalahan saat mengambil data negara.\");\n  }\n};\n\nhandler.help = [\"cekrakyat <nama_negara>\"];\nhandler.tags = [\"tools\"];\nhandler.command = [\"cekrakyat\"];\n\nmodule.exports = handler;"
    },
    {
      "title": "plugin convert-webtoapk",
      "content": "let axios = require('axios')\n\nlet handler = async (m, { text, daftar, isRegistered, command }) => {\n    if (!isRegistered) return daftar(`kamu belum daftar, daftarlah agar bisa menggunakan fitur bot\\ncara daftar .daftar nama.umur\\nseperti ini balzy.10`)\n    if (!text) return m.reply(`Kirimkan URL Website, Email, Dan Nama Aplikasi!\\n\\nContoh:\\n${command} https://contoh.com email@gmail.com NamaApp`)\n    \n    let [url, email, ...nameArr] = text.split(\" \")\n    let name = nameArr.join(\" \")\n    \n    if (!url || !url.startsWith(\"http\")) return m.reply(\"URL Website Tidak Valid!\")\n    if (!email || !email.includes(\"@\")) return m.reply(\"Email Tidak Valid!\")\n    if (!name) return m.reply(\"Nama Aplikasi Tidak Boleh Kosong!\")\n    \n    m.reply(\"Ã¢ÂÂ³ Sedang Memproses Build APK, Tunggu Sekitar 5 Menit...\")\n    \n    try {\n        let apiurl = `https://web2apk-cg.zone.id/tools/web2app?apikey=bagus&url=${encodeURIComponent(url)}&email=${encodeURIComponent(email)}&name=${encodeURIComponent(name)}`\n        let res = await axios.get(apiurl)\n        \n        if (!res.data.status) return m.reply(\"Ã¢ÂÂ Gagal Membuat Aplikasi, Coba Lagi Nanti.\")\n        \n        m.reply(`Ã¢ÂÂ *Build APK Berhasil!*\\n\\nÃ°ÂÂÂ Nama: ${res.data.appName}\\nÃ°ÂÂÂ¥ Download: ${res.data.download}`)\n    } catch (e) {\n        m.reply(\"Ã¢ÂÂ Terjadi Kesalahan: \" + e.message)\n    }\n}\n\nhandler.command = ['web2app', 'buatapk']\nhandler.tags = ['tools']\nhandler.help = ['web2app <url> <email> <nama>']\n\nmodule.exports = handler"
    },
    {
      "title": "plugin tools-cekdns",
      "content": "const fetch = require(\"node-fetch\");\n\nlet handler = async (m, { text }) => {\n  if (!text) return m.reply(\"â Contoh penggunaan:\\n.cekdns google.com\");\n\n  try {\n    // Resolve A record via Google DNS API\n    let resDNS = await fetch(`https://dns.google/resolve?name=${text}&type=A`);\n    let dnsData = await resDNS.json();\n\n    let ips = [];\n    if (dnsData.Answer) {\n      ips = dnsData.Answer.map(a => a.data);\n    } else {\n      ips.push(\"Tidak bisa resolve IP\");\n    }\n\n    // GeoIP lookup via ip-api.com (ambil IP pertama)\n    let geo = {};\n    if (ips[0] !== \"Tidak bisa resolve IP\") {\n      let geoRes = await fetch(`http://ip-api.com/json/${ips[0]}?fields=country,regionName,city,isp,org,as,query`);\n      geo = await geoRes.json();\n    }\n\n    let hasil = `\nð *Cek DNS & Lokasi Server*\nââââââââââââââââââââââââââââ\nð Domain: ${text}\nð¡ IP: ${ips.join(\", \")}\nð´ Negara: ${geo.country || \"-\"}\nðï¸ Kota/Region: ${geo.regionName || \"-\"}, ${geo.city || \"-\"}\nð¶ ISP: ${geo.isp || \"-\"}\nð¢ Org: ${geo.org || \"-\"}\nð¢ ASN: ${geo.as || \"-\"}\n    `.trim();\n\n    m.reply(hasil);\n  } catch (e) {\n    m.reply(`â Gagal cek DNS untuk ${text}\\nAlasan: ${e.message}`);\n  }\n};\n\nhandler.help = [\"cekdns <domain>\"];\nhandler.tags = [\"tools\"];\nhandler.command = [\"cekdns\"];\n\nmodule.exports = handler;"
    },
    {
      "title": "case getpp",
      "content": "case 'getpp': {\n let nomorTelepon;\n if (m.quoted) {\n const quotedParticipant = m.quoted.sender || m.quoted.from;\n nomorTelepon = quotedParticipant; \n } if (!nomorTelepon && text && text.length >= 6) {\n nomorTelepon = text.replace(/[^0-9]/g, '') + '@s.whatsapp.net'; \n } if (!nomorTelepon) {\n return m.reply('Silakan masukkan nomor telepon yang valid atau reply/tag nomor yang ingin diambil PP-nya. Contoh: `getpp +6287862115557`');\n } try {\n var ppuser = await conn.profilePictureUrl(nomorTelepon, 'image');\n } catch (err) {\n var ppuser = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png?q=60';\n } \n conn.sendMessage(m.chat, { image: { url: ppuser } }, { quoted: m });\n}\n break;"
    }
  ],
  "theme": {
    "mode": "light",
    "customUrl": ""
  }
}